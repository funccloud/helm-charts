---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kcp-ca
spec:
  isCA: true
  commonName: kcp-ca
  secretName: kcp-ca
  privateKey:
    {{- toYaml .Values.certificates.privateKeys | nindent 4 }}
  issuerRef:
    name: kcp-pki-ca
    kind: Issuer
    group: cert-manager.io
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kcp-requestheader-client-ca
spec:
  isCA: true
  commonName: kcp-requestheader-client-ca
  secretName: kcp-requestheader-client-ca
  privateKey:
    {{- toYaml .Values.certificates.privateKeys | nindent 4 }}
  issuerRef:
    name: kcp-pki-ca
    kind: Issuer
    group: cert-manager.io
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kcp-server-client-ca
spec:
  isCA: true
  commonName: kcp-server-client-ca
  secretName: kcp-server-client-ca
  privateKey:
    {{- toYaml .Values.certificates.privateKeys | nindent 4 }}
  issuerRef:
    name: kcp-pki-ca
    kind: Issuer
    group: cert-manager.io
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: kcp-server-issuer
spec:
  ca:
    secretName: kcp-ca
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: kcp-server-client-issuer
spec:
  ca:
    secretName: kcp-server-client-ca
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: kcp-requestheader-client-issuer
spec:
  ca:
    secretName: kcp-requestheader-client-ca
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kcp
spec:
  secretName: kcp-cert
  duration: 8760h0m0s # 365d
  renewBefore: 360h0m0s # 15d
  {{- with .Values.certificates.subject }}
  subject:
    {{- toYaml . | nindent 4 }}
  {{- end}}
  privateKey:
    {{- toYaml .Values.certificates.privateKeys | nindent 4 }}
  usages:
    - server auth
  dnsNames:
    - kcp
    - localhost
  issuerRef:
    name: kcp-server-issuer
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kcp-virtual-workspaces
spec:
  secretName: kcp-virtual-workspaces-cert
  duration: 8760h0m0s # 365d
  renewBefore: 360h0m0s # 15d
  {{- with .Values.certificates.subject }}
  subject:
    {{- toYaml . | nindent 4 }}
  {{- end}}
  privateKey:
    {{- toYaml .Values.certificates.privateKeys | nindent 4 }}
  usages:
    - server auth
  dnsNames:
    - kcp
    - localhost
  issuerRef:
    name: kcp-server-issuer
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kcp-etcd-client
spec:
  secretName: kcp-etcd-client
  duration: 8760h0m0s # 365d
  renewBefore: 360h0m0s # 15d
  commonName: {{ .Values.kcp.etcd.clientCertificate.commonName }}
  privateKey:
    {{- toYaml .Values.certificates.privateKeys | nindent 4 }}
  usages:
    - client auth
  issuerRef:
    name: {{ .Values.kcp.etcd.clientCertificate.issuer }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kcp
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.kcp.volumeSize }}
  {{ with .Values.kcp.volumeClassName -}}storageClassName: {{ . }}{{- end }}
{{- if .Values.audit.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kcp-audit-logs
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.audit.volumeSize }}
  {{ with .Values.audit.volumeClassName -}}storageClassName: {{ . }}{{- end }}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: kcp
  labels:
    app: kcp
spec:
  ports:
    - protocol: TCP
      name: kcp
      port: 6443
      targetPort: 6443
    - protocol: TCP
      name: virtual-workspaces
      port: 6444
      targetPort: 6444
  selector:
    app: kcp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kcp
  labels:
    app: kcp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kcp
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: kcp
    spec:
      containers:
      - name: kcp
        image: {{ .Values.kcp.image }}:{{ .Values.kcp.tag }}
        ports:
        - containerPort: 6443
        args:
        - start
        - --etcd-servers={{ .Values.kcp.etcd.serverAddress }}
        - --etcd-keyfile=/etc/etcd/tls/server/tls.key
        - --etcd-certfile=/etc/etcd/tls/server/tls.crt
        - --etcd-cafile=/etc/etcd/tls/server/ca.crt
        - --client-ca-file=/etc/kcp/tls/server-client/ca.crt
        - --tls-private-key-file=/etc/kcp/tls/server/tls.key
        - --tls-cert-file=/etc/kcp/tls/server/tls.crt
        - --requestheader-client-ca-file=/etc/kcp/tls/requestheader-client/ca.crt
        - --requestheader-username-headers=X-Remote-User
        - --requestheader-group-headers=X-Remote-Group
        - --root-directory=/etc/kcp/config
        - --run-virtual-workspaces=false
        - --shard-base-url=https://kcp:6443
        - --shard-external-url=https://$(EXTERNAL_HOSTNAME):443
        - --external-hostname=$(EXTERNAL_HOSTNAME):443
        - --shard-virtual-workspace-url=https://$(EXTERNAL_HOSTNAME):443
        - --root-ca-file=/etc/kcp/tls/ca/root-ca.pem
        {{- if .Values.oidc }}
        - --oidc-issuer-url={{ .Values.oidc.issuerUrl }}
        - --oidc-client-id={{ .Values.oidc.clientId }}
        - --oidc-groups-claim={{ .Values.oidc.groupClaim }}
        - --oidc-username-claim={{ .Values.oidc.usernameClaim }}
        - "--oidc-username-prefix={{ .Values.oidc.usernamePrefix }}"
        - "--oidc-groups-prefix={{ .Values.oidc.groupsPrefix }}"
        {{- end }}
        - --v={{ .Values.kcp.v }}
        {{- if .Values.audit.enabled }}
        - --audit-log-maxage={{ .Values.audit.log.maxAge }}
        - --audit-log-maxbackup={{ .Values.audit.log.maxBackup }}
        - --audit-log-maxsize={{ .Values.audit.log.maxSize }}
        - --audit-log-path={{ .Values.audit.log.dir }}/kcp.log
        - --audit-policy-file={{ .Values.audit.policy.dir }}/{{ .Values.audit.policy.fileName }}
        - --audit-log-compress
        {{- end }}
        {{- if .Values.kcp.profiling.enabled }}
        - --profiler-address=localhost:{{- .Values.kcp.profiling.port -}}
        {{- end }}
        {{- range .Values.kcp.extraFlags }}
        - {{ . }}
        {{- end }}
        env:
        - name: EXTERNAL_HOSTNAME
          value: {{ required "A valid external hostname is required" .Values.externalHostname }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: livez
            port: 6443
            scheme: HTTPS
          initialDelaySeconds: 45
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        startupProbe:
          httpGet:
            path: readyz
            port: 6443
            scheme: HTTPS
          initialDelaySeconds: 10
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 18
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: readyz
            port: 6443
            scheme: HTTPS
        resources:
          limits:
            cpu: '{{ .Values.kcp.cpuLimit }}'
            memory: '{{ .Values.kcp.memoryLimit }}'
          requests:
            cpu: '{{ .Values.kcp.cpuRequest }}'
            memory: '{{ .Values.kcp.memoryRequest }}'
        volumeMounts:
        - name: etcd-certs
          mountPath: /etc/etcd/tls/server
        - name: kcp-certs
          mountPath: /etc/kcp/tls/server
        - name: kcp-server-client-ca
          mountPath: /etc/kcp/tls/server-client
        - name: kcp-requestheader-client-ca 
          mountPath: /etc/kcp/tls/requestheader-client
        - name: kubeconfig
          mountPath: /etc/kcp/config
        {{- if .Values.audit.enabled }}
        - name: audit-log
          mountPath: {{ .Values.audit.log.dir }}
        - name: audit-policy
          mountPath: {{ .Values.audit.policy.dir }}
        {{- end }}
        - name: root-ca-file
          mountPath: /etc/kcp/tls/ca
      - name: virtual-workspaces
        image: {{ .Values.virtualWorkspaces.image }}:{{ .Values.virtualWorkspaces.tag }}
        ports:
        - containerPort: 6444
        command:
        - sh
        - -c
        - >
          cat /etc/kcp/config/admin.kubeconfig | sed -e 's;://\([^/]*\);://localhost:6443;' -e 's;current-context: root;current-context: system:admin;' > /etc/kcp/config/localhost.kubeconfig &&
          exec /usr/bin/virtual-workspaces
          workspaces
          --kubeconfig=/etc/kcp/config/localhost.kubeconfig
          --authentication-kubeconfig=/etc/kcp/config/localhost.kubeconfig
          --authentication-skip-lookup
          --client-ca-file=/etc/kcp/tls/server-client/ca.crt
          --tls-private-key-file=/etc/kcp/tls/server/tls.key
          --tls-cert-file=/etc/kcp/tls/server/tls.crt
          --requestheader-client-ca-file=/etc/kcp/tls/requestheader-client/ca.crt
          --requestheader-username-headers=X-Remote-User
          --requestheader-group-headers=X-Remote-Group
          --secure-port=6444
          --v={{ .Values.kcp.v }}
          {{- if .Values.virtualWorkspaces.profiling.enabled }}
          --profiler-address=localhost:{{- .Values.virtualWorkspaces.profiling.port -}}
          {{- end }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: livez
            port: 6444
            scheme: HTTPS
          initialDelaySeconds: 45
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        startupProbe:
          httpGet:
            path: readyz
            port: 6444
            scheme: HTTPS
          initialDelaySeconds: 10
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 18
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: readyz
            port: 6444
            scheme: HTTPS
        resources:
          limits:
            cpu: '{{ .Values.virtualWorkspaces.cpuLimit }}'
            memory: '{{ .Values.virtualWorkspaces.memoryLimit }}'
          requests:
            cpu: '{{ .Values.virtualWorkspaces.cpuRequest }}'
            memory: '{{ .Values.virtualWorkspaces.memoryRequest }}'
        volumeMounts:
        - name: virtual-workspaces-certs
          mountPath: /etc/kcp/tls/server
        - name: kcp-server-client-ca
          mountPath: /etc/kcp/tls/server-client
        - name: kcp-requestheader-client-ca 
          mountPath: /etc/kcp/tls/requestheader-client
        - name: kubeconfig
          mountPath: /etc/kcp/config
      volumes:
      - name: etcd-certs
        secret:
          secretName: kcp-etcd-client
      - name: kcp-certs
        secret:
          secretName: kcp-cert
      - name: virtual-workspaces-certs
        secret:
          secretName: kcp-virtual-workspaces-cert
      - name: kcp-requestheader-client-ca
        secret:
          secretName: kcp-requestheader-client-ca
          items:
          - key: ca.crt
            path: ca.crt
      - name: kcp-server-client-ca
        secret:
          secretName: kcp-server-client-ca
          items:
          - key: ca.crt
            path: ca.crt
      - name: kubeconfig
        persistentVolumeClaim:
          claimName: kcp
      {{- if .Values.audit.enabled }}
      - name: audit-policy
        configMap:
          name: audit-policy
      - name: audit-log
        persistentVolumeClaim:
          claimName: kcp-audit-logs
      {{- end }}
      - name: root-ca-file
        configMap:
          name: kcp-root-ca
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: audit-policy
data:
  {{ .Values.audit.policy.fileName }}: |
    {{- .Values.audit.policy.config | nindent 4 }}
